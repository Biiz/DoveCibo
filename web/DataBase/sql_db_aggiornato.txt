CREATE TABLE USERS (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
NAME VARCHAR(255),
SURNAME VARCHAR(255),
NICKNAME VARCHAR(25),
EMAIL VARCHAR(254) NOT NULL,
PASSWORD VARCHAR(255) NOT NULL,
PRIMARY KEY (ID),
UNIQUE (NICKNAME),
UNIQUE (EMAIL)
);

CREATE TABLE PRICE_RANGES (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
MIN_VALUE FLOAT,
MAX_VALUE FLOAT,
PRIMARY KEY (ID),
CONSTRAINT PRICE_RANGE_CHECK CHECK ((MIN_VALUE IS NULL AND MAX_VALUE IS NOT
NULL) OR (MIN_VALUE IS
NOT NULL AND MAX_VALUE IS NULL) OR (MIN_VALUE < MAX_VALUE))
);

CREATE TABLE RESTAURANTS (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
NAME VARCHAR(255) NOT NULL,
DESCRIPTION VARCHAR(32000),
WEB_SITE_URL VARCHAR(255),
GLOBAL_VALUE INTEGER CONSTRAINT GLOBAL_VALUE_CHECK CHECK (GLOBAL_VALUE
>= 0 AND
GLOBAL_VALUE <= 5),
ID_OWNER INTEGER,
ID_CREATOR INTEGER NOT NULL,
ID_PRICE_RANGE INTEGER,
PRIMARY KEY (ID),
FOREIGN KEY (ID_OWNER) REFERENCES USERS (ID),
FOREIGN KEY (ID_CREATOR) REFERENCES USERS (ID),
FOREIGN KEY (ID_PRICE_RANGE) REFERENCES PRICE_RANGES (ID)
);

CREATE TABLE PHOTOS (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
NAME VARCHAR(25) NOT NULL,
DESCRIPTION VARCHAR (32000),
PATH VARCHAR(255) NOT NULL,
ID_RESTAURANT INTEGER NOT NULL,
ID_OWNER INTEGER NOT NULL,
VALIDATION INTEGER,
PRIMARY KEY (ID),
FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),
FOREIGN KEY (ID_OWNER) REFERENCES USERS (ID)
);

CREATE TABLE COORDINATES (
ID_RESTAURANT INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
LATITUDE FLOAT NOT NULL,
LONGITUDE FLOAT NOT NULL,
ADDRESS VARCHAR(255) NOT NULL,
PRIMARY KEY (ID_RESTAURANT),
FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID)
);

CREATE TABLE OPENING_HOURS_RANGES (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
DAY_OF_THE_WEEK INTEGER CONSTRAINT DAY_OF_THE_WEEK_CHECK CHECK
(DAY_OF_THE_WEEK >= 0 AND
DAY_OF_THE_WEEK <= 6),
START_HOUR_M VARCHAR(5) NOT NULL,
END_HOUR_M VARCHAR(5) NOT NULL,
START_HOUR_P VARCHAR(5) NOT NULL,
END_HOUR_P VARCHAR(5) NOT NULL,
PRIMARY KEY (ID)
);

CREATE TABLE OPENING_HOURS_RANGE_RESTAURANT (
ID_RESTAURANT INTEGER NOT NULL,
ID_OPENING_HOURS_RANGE INTEGER NOT NULL,
PRIMARY KEY (ID_RESTAURANT, ID_OPENING_HOURS_RANGE),
FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),
FOREIGN KEY (ID_OPENING_HOURS_RANGE) REFERENCES OPENING_HOURS_RANGES (ID)
);

CREATE TABLE CUISINES (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
NAME VARCHAR(25) NOT NULL,
PRIMARY KEY (ID)
);

CREATE TABLE RESTAURANT_CUISINE (
ID_RESTAURANT INTEGER NOT NULL,
ID_CUISINE INTEGER NOT NULL,
PRIMARY KEY (ID_RESTAURANT, ID_CUISINE),
FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),
FOREIGN KEY (ID_CUISINE) REFERENCES CUISINES (ID)
);

CREATE TABLE REVIEWS (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
GLOBAL_VALUE INTEGER NOT NULL CONSTRAINT REVIEW_GLOBAL_VALUE_CHECK CHECK
(GLOBAL_VALUE >= 1
AND GLOBAL_VALUE <= 5),
FOOD INTEGER CONSTRAINT REVIEW_FOOD_CHECK CHECK (FOOD IS NULL OR (FOOD
>= 1 AND FOOD <=
5)),
SERVICE INTEGER CONSTRAINT REVIEW_SERVICE_CHECK CHECK (SERVICE IS NULL
OR (SERVICE >= 1 AND
SERVICE <= 5)),
VALUE_FOR_MONEY INTEGER CONSTRAINT REVIEW_VALUE_FOR_MONEY_CHECK CHECK
(VALUE_FOR_MONEY IS
NULL OR (VALUE_FOR_MONEY >= 1 AND VALUE_FOR_MONEY <= 5)),
ATMOSPHERE INTEGER CONSTRAINT REVIEW_ATMOSPHERE_CHECK CHECK (ATMOSPHERE IS NULL OR (ATMOSPHERE >= 1 AND ATMOSPHERE <= 5)),
NAME VARCHAR(25),
DESCRIPTION VARCHAR(32000),
DATE_CREATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ID_RESTAURANT INTEGER NOT NULL,
ID_CREATOR INTEGER NOT NULL,
ID_PHOTO INTEGER,
VALIDATION INTEGER,
PRIMARY KEY (ID),
FOREIGN KEY (ID_RESTAURANT) REFERENCES RESTAURANTS (ID),
FOREIGN KEY (ID_CREATOR) REFERENCES USERS (ID),
FOREIGN KEY (ID_PHOTO) REFERENCES PHOTOS (ID)
);

CREATE TABLE REPLIES (
ID INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
DESCRIPTION VARCHAR(32000) NOT NULL,
DATE_CREATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ID_REVIEW INTEGER NOT NULL,
ID_OWNER INTEGER NOT NULL,
DATE_VALIDATION TIMESTAMP,
ID_VALIDATOR INTEGER,
PRIMARY KEY (ID),
FOREIGN KEY (ID_REVIEW) REFERENCES REVIEWS (ID),
FOREIGN KEY (ID_OWNER) REFERENCES USERS (ID),
FOREIGN KEY (ID_VALIDATOR) REFERENCES USERS (ID)
);

CREATE TABLE USER_REVIEW_LIKES (
ID_USER INTEGER NOT NULL,
ID_REVIEW INTEGER NOT NULL,
ID_CREATOR INTEGER NOT NULL,
LIKE_TYPE INTEGER NOT NULL CONSTRAINT LIKE_TYPE_CHECK CHECK (LIKE_TYPE>= 0 AND LIKE_TYPE<= 1),
DATE_CREATION TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (ID_USER, ID_REVIEW, ID_CREATOR),
FOREIGN KEY (ID_USER) REFERENCES USERS (ID),
FOREIGN KEY (ID_REVIEW) REFERENCES REVIEWS (ID),
FOREIGN KEY (ID_CREATOR) REFERENCES USERS (ID)
);

INSERT INTO CUISINES (ID, NAME) VALUES (1,'PIZZERIA');
INSERT INTO CUISINES (ID, NAME) VALUES (2,'TRATTORIA');
INSERT INTO CUISINES (ID, NAME) VALUES (3,'RISTORANTE');
INSERT INTO CUISINES (ID, NAME) VALUES (4,'DISCO RESTAURANT');
INSERT INTO CUISINES (ID, NAME) VALUES (5,'STRANIERA');
INSERT INTO CUISINES (ID, NAME) VALUES (6,'ALTRO');
